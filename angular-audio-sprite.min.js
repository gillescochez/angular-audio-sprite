angular.module("ngAudioSprite.service",[]).factory("audioSprite",["$http",function(a){function b(a){var b=a.split("/");return b.splice(b.length-1,1),b.join("/")+"/"}function c(a){angular.forEach(g[a],function(b){b.callback.call(b.scope,f[a])})}function d(a,b,c){g[a]||(g[a]=[]),g[a].push({callback:b,scope:c})}function e(){g={}}var f={id:"",muted:!1,volumeValue:1,config:{},mute:function(){this.muted=!0,c("muted")},unmute:function(){this.muted=!1,c("muted")},volume:function(a){this.volumeValue=a,c("volumeValue")},play:function(a){this.id=a,c("id")},stop:function(){this.id="",c("id")},spritemap:function(a){this.config.spritemap=a},configure:function(a){if(!(a&&a.resources&&a.spritemap))throw"Invalid configuration object";this.config=a,c("config")},load:function(d){var e=this;a.get(d).success(function(a){e.config=a,e.config.path=b(d),c("config")}).error(function(){throw"Failed to retrieve audio sprite configuration file: "+d})},observe:d,destroy:e},g={};return f}]),angular.module("ngAudioSprite.directive",[]).directive("ngAudioSprite",["audioSprite",function(a){function b(){var a=n.length,b=0;if(!k.canPlayType)throw"ngAudioSprite: Browser not supported!";for(;a>b;b++)if(""!==k.canPlayType("audio/"+n[b]))return void(o=n[b])}function c(a,b){var c=angular.element(k).children()[0]||document.createElement("source"),d="."+o,e=a.length,f=0;for(b=b||"",c.type&&c.type===o||(c.type="audio/"+o);e>f;f++)if(a[f].substr(-4)===d)return c.src||k.appendChild(c),void(c.src=b+a[f])}function d(){k.currentTime>=m.end&&(k.pause(),m.loop&&f())}function e(){angular.element(k).on("timeupdate",d)}function f(a){l[a]&&(m=l[a],k.currentTime=m.start,k.play())}function g(){k.pause()}function h(a){a.resources&&a.spritemap&&(c(a.resources,a.path),l=a.spritemap)}function i(a){k.muted=a}function j(a){k.volume=a}var k,l={},m={},n=["ogg","m4a","mp3","ac3","caf"],o="";return{restrict:"AEC",link:function(c,d,m){k=d[0],!o&&b(),e(),""!==m.ngAudioSprite&&(a.load(m.ngAudioSprite),m.$observe("ng-audio-sprite",function(b){b&&a.load(b)})),m.ngAudioSpritemap&&(l=JSON.parse(m.ngAudioSpritemap),a.spritemap(l),m.$observe("ng-audio-spritemap",function(b){b&&(b=JSON.parse(b),a.spritemap(b),l=b)})),a.observe("volumeValue",j,this),a.observe("muted",i,this),a.observe("config",h,this),a.observe("id",function(a){a?f(a):g()},this),c.$on("$destroy",a.destroy)}}}]),angular.module("ngAudioSprite",["ngAudioSprite.service","ngAudioSprite.directive"]);
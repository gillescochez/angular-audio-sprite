angular.module("ngAudioSprite.directive",[]).directive("ngAudioSprite",["audioSprite",function(a){function b(){var a=l.length,b=0;if(!i.canPlayType)throw"ngAudioSprite: Browser not supported!";for(;a>b;b++)if(""!==i.canPlayType("audio/"+l[b]))return void(m=l[b])}function c(a,b){var c=angular.element(i).children()[0]||document.createElement("source"),d="."+m,e=a.length,f=0;for(c.type&&c.type===m||(c.type="audio/"+m);e>f;f++)if(a[f].substr(-4)===d)return c.src||i.appendChild(c),void(c.src=b+a[f])}function d(){i.currentTime>=k.end&&i.pause()}function e(){angular.element(i).on("timeupdate",d)}function f(){var b=a.id;j[b]&&(k=j[b],i.currentTime=k.start,i.play())}function g(){i.pause()}function h(){var b=a.config;b.resources&&b.spritemap&&(c(b.resources,b.path),j=b.spritemap)}var i,j={},k={},l=["ogg","m4a","mp3","ac3","caf"],m="";return{restrict:"AEC",link:function(c,d){i=d[0],!m&&b(),e(),a.addObserver("config",h,this),a.addObserver("id",function(){a.id?f():g()},this),c.$on("$destroy",a.removeObservers)}}}]),angular.module("ngAudioSprite",["ngAudioSprite.service","ngAudioSprite.directive"]),angular.module("ngAudioSprite.service",[]).factory("audioSprite",["$http",function(a){function b(a){var b=a.split("/");return b.splice(b.length-1,1),b.join("/")+"/"}function c(a){angular.forEach(g[a],function(a){a.callback.call(a.scope)})}function d(a,b,c){g[a]||(g[a]=[]),g[a].push({callback:b,scope:c})}function e(){g={}}var f={id:"",config:{},configure:function(a){if(!(a&&a.resources&&a.path&&a.spritemap))throw"Invalid configuration object";this.config=a,c("config")},play:function(a){this.id=a,c("id")},stop:function(){this.id="",c("id")},load:function(d){var e=this;a.get(d).success(function(a){e.config=a,e.config.path=b(d),c("config")}).error(function(){throw"Failed to retrieve audio sprite configuration file: "+d})},addObserver:d,removeObservers:e},g={};return f}]);